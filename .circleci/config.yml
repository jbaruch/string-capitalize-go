version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.11
    steps:
      - checkout
      - run: curl -fsL https://getcli.jfrog.io | sh
      - run: ./jfrog rt config --url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --password $ARTIFACTORY_PASSWORD --interactive=false
      - run: ./jfrog rt go build go --build-name=$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME --build-number=$CIRCLE_BUILD_NUM  
      - run: curl -sL https://git.io/goreleaser | bash -s -- --snapshot 
      - run: ./jfrog rt upload "dist/*.tar.gz" binary-releases-local --build-name=$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME --build-number=$CIRCLE_BUILD_NUM 
      - run: ./jfrog rt build-collect-env $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME $CIRCLE_BUILD_NUM 
      - run: ./jfrog rt build-publish --build-url=$CIRCLE_BUILD_URL $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME $CIRCLE_BUILD_NUM 
  deploy:
    docker:
    - image: circleci/golang:1.11
    steps:
      - checkout
      - run: curl -fsL https://getcli.jfrog.io | sh
      - run: ./jfrog rt config --url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --password $ARTIFACTORY_PASSWORD --interactive=false
      - run: ./jfrog rt go build go      
      - run: go clean
      - run: curl -sL https://git.io/goreleaser | bash -s -- --debug

workflows:
  version: 2
  build-n-deploy:
    jobs:
      - build:
          filters: 
            tags:
              ignore: /.*/
      - deploy:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/